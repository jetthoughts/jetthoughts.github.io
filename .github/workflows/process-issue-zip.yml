name: Process Issue Attachments

on:
  issue_comment:
    types: [created, edited, deleted]

jobs:
  handle-upload:
    if: |
      (contains(github.event.comment.body, 'UPLOAD_ZIP:') ||
      contains(github.event.comment.body, '.zip)')) &&
      contains(fromJSON('["pftg"]'), github.event.comment.user.login)

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Parse comment
        id: parse
        run: |
          # Try to find URL from UPLOAD_ZIP: format
          ZIP_URL=$(echo "${{ github.event.comment.body }}" | grep -oP 'UPLOAD_ZIP:\s*\K\S+' || echo "")

          # If not found, try to find URL from markdown link format
          if [ -z "$ZIP_URL" ]; then
            ZIP_URL=$(echo "${{ github.event.comment.body }}" | grep -oP '\[.*?\]\((https?://.*?\.zip)\)' | grep -oP '(https?://.*?\.zip)')
          fi

          echo "url=$ZIP_URL"
          echo "issue=${{ github.event.issue.number }}"
          echo "url=$ZIP_URL" >> $GITHUB_OUTPUT
          echo "issue=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT

      - name: Download and process ZIP
        if: steps.parse.outputs.url != ''
        run: |
          wget "${{ steps.parse.outputs.url }}" -O upload.zip
          mkdir -p "tmp/posts/${{ steps.parse.outputs.issue }}"
          unzip upload.zip -d "tmp/posts/${{ steps.parse.outputs.issue }}"
          rm upload.zip

      - name: Create branch and commit files
        if: steps.parse.outputs.url != ''
        run: |
          git config --global user.name "Issue Processor"
          git config --global user.email "actions@github.com"

          # Create a new branch
          BRANCH_NAME="add-files-issue-${{ steps.parse.outputs.issue }}"
          git checkout -b $BRANCH_NAME
          
          git add .
          git commit -m "Add files from issue #${{ steps.parse.outputs.issue }}"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        if: steps.parse.outputs.url != ''
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --title "Add files from issue #${{ steps.parse.outputs.issue }}" \
            --body "This PR adds files uploaded in issue #${{ steps.parse.outputs.issue }}.\n\nAutomatically created by the Process Issue Attachments workflow." \
            --base master

      - name: Update issue
        if: steps.parse.outputs.url != ''
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh issue comment ${{ steps.parse.outputs.issue }} --body "âœ… Files processed and a Pull Request has been created!\nView PR: https://github.com/${{ github.repository }}/pulls"
