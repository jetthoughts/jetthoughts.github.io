#!/usr/bin/env bash
# Fast development server with optimal settings for JetThoughts site

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
DEFAULT_PORT=1313
DEFAULT_BIND="127.0.0.1"
HUGO_ENV="development"

# Parse command line arguments
BIND=$DEFAULT_BIND
PORT=$DEFAULT_PORT
DRAFTS=""
FUTURE=""
EXPIRED=""

show_help() {
    cat << EOF
Hugo Development Server - Optimized for JetThoughts

USAGE:
    $0 [OPTIONS]

OPTIONS:
    -p, --port PORT      Server port (default: $DEFAULT_PORT)
    -b, --bind ADDR      Bind address (default: $DEFAULT_BIND)
    -d, --drafts         Include draft content
    -f, --future         Include future content
    -e, --expired        Include expired content
    -h, --help           Show this help message

EXAMPLES:
    $0                   # Start dev server with defaults
    $0 -p 3000           # Start on port 3000
    $0 -d -f             # Include drafts and future content
    $0 -b 0.0.0.0        # Bind to all interfaces

EOF
}

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -p|--port)
            PORT="$2"
            shift 2
            ;;
        -b|--bind)
            BIND="$2"
            shift 2
            ;;
        -d|--drafts)
            DRAFTS="--buildDrafts"
            shift
            ;;
        -f|--future)
            FUTURE="--buildFuture"
            shift
            ;;
        -e|--expired)
            EXPIRED="--buildExpired"
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo -e "${RED}Error: Unknown option $1${NC}" >&2
            show_help
            exit 1
            ;;
    esac
done

# Pre-flight checks
if ! command -v hugo &> /dev/null; then
    echo -e "${RED}Error: Hugo is not installed or not in PATH${NC}" >&2
    exit 1
fi

# Check if port is available
if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null; then
    echo -e "${YELLOW}Warning: Port $PORT is already in use${NC}" >&2
    echo "Please choose a different port with -p/--port option"
    exit 1
fi

# Display startup info
echo -e "${GREEN}Starting Hugo Development Server${NC}"
echo -e "Environment: ${YELLOW}$HUGO_ENV${NC}"
echo -e "URL: ${GREEN}http://$BIND:$PORT${NC}"
echo -e "Press Ctrl+C to stop"
echo

# Clean previous build artifacts for fresh start
echo -e "${YELLOW}Cleaning cache and temporary files...${NC}"
rm -rf public/ resources/_gen/ .hugo_build.lock 2>/dev/null || true

# Start Hugo development server with optimized settings
exec hugo server \
    --environment "$HUGO_ENV" \
    --port "$PORT" \
    --bind "$BIND" \
    --disableFastRender=false \
    --navigateToChanged \
    --templateMetrics=false \
    --verbose \
    $DRAFTS \
    $FUTURE \
    $EXPIRED