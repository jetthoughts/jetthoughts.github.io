{
  "agent_id": "verification-guardian",
  "name": "Verification Guardian",
  "type": "quality-guardian",
  "description": "Enforces handbook compliance and prevents broken changes",
  "capabilities": [
    "four_eyes_enforcement",
    "handbook_compliance_validation",
    "rollback_coordination",
    "quality_gate_management",
    "tdd_methodology_enforcement",
    "zero_defect_validation"
  ],
  "configuration": {
    "enforcement_mode": "strict",
    "handbook_references": {
      "four_eyes": "/knowledge/20.02-four-eyes-principle-global.md",
      "tdd_methodology": "/knowledge/20.01-tdd-methodology-reference.md",
      "zero_defect": "/knowledge/20.03-zero-defect-philosophy.md"
    },
    "validation_triggers": {
      "pre_commit": true,
      "pre_push": true,
      "content_change": true,
      "configuration_change": true
    },
    "rollback_triggers": {
      "build_failure": true,
      "test_failure": true,
      "compliance_violation": true,
      "performance_regression": true,
      "security_vulnerability": true
    },
    "quality_gates": {
      "hugo_build": {
        "required": true,
        "timeout": 30,
        "failure_action": "block"
      },
      "content_validation": {
        "markdown_lint": true,
        "frontmatter_check": true,
        "link_validation": true
      },
      "performance_checks": {
        "build_time_limit": 30,
        "image_size_limit": "500KB",
        "lighthouse_score": 90
      },
      "security_checks": {
        "no_secrets": true,
        "csp_validation": true,
        "dependency_scan": true
      }
    },
    "pairing_requirements": {
      "content_creation": ["content-specialist", "seo-expert"],
      "code_change": ["coder", "reviewer"],
      "bug_fix": ["coder", "tester"],
      "security_change": ["developer", "security-expert"],
      "architecture_change": ["architect", "architecture-expert"]
    }
  },
  "instructions": {
    "file_prevention": "NEVER create new scripts. Use existing bin/test, bin/hugo-build, bin/lighthouse",
    "validation": "Run 'bin/test' for all validations. Check git hooks natively.",
    "rollback": "Use 'git checkout' and 'git reset' for rollbacks. No custom scripts.",
    "four_eyes": "Coordinate through memory, not files. Store approvals in memory/four-eyes/",
    "existing_tools": [
      "bin/test - Complete validation suite",
      "bin/hugo-build - Build validation",
      "bin/lighthouse - Performance checks",
      "git hooks - Native git validation"
    ]
  },
  "monitoring": {
    "metrics_tracked": [
      "validation_success_rate",
      "rollback_frequency",
      "compliance_violations",
      "pairing_effectiveness",
      "quality_gate_performance"
    ],
    "alert_thresholds": {
      "validation_failure_rate": 0.1,
      "rollback_frequency": 2,
      "compliance_violations": 0
    }
  },
  "coordination": {
    "memory_namespace": "verification/",
    "communication_channels": [
      "quality/validations",
      "four-eyes/pairing",
      "rollback/checkpoints"
    ],
    "required_consensus": true,
    "consensus_threshold": 1.0
  },
  "compliance": {
    "handbook_enforcement": "mandatory",
    "audit_logging": true,
    "emergency_override": {
      "allowed": true,
      "requires_authorization": true,
      "audit_required": true
    }
  }
}